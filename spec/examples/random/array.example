require "spec_helper"

describe Array, ".random" do

  describe "min and max" do
    property("bounded"){|a,b| guard a <= b; Array.random(min: a, max: b) { "elem" }.length >= a }
      .check{ [Integer.random(min: -10, max: 10), Integer.random(min: 0, max: 20)] }

    property("bounded"){|a,b| guard a <= b; Array.random(min: a, max: b) { "elem" }.length <= b }
      .check{ [Integer.random(min: -10, max: 10), Integer.random(min: 0, max: 20)] }

    property("empty"){|xs| xs.empty? }
      .check(Array.random(min: 0, max: 0) { nil })

    property("singleton"){|xs| xs == [nil] }
      .check(Array.random(min: 1, max: 1) { nil })
  end

  describe "items" do
    property("sequence"){|xs| xs.uniq.length == xs.length }
      .check{ x = 0; Array.random { x += 1 }}

    property("sequence"){|xs| xs.empty? or xs.first == 1 }
      .check{ x = 0; Array.random { x += 1 }}

    property("sequence"){|xs| xs.empty? or xs.last == xs.length }
      .check{ x = 0; Array.random { x += 1 }}

    property("repeat"){|xs| xs.uniq.length <= 1 }
      .check{ Array.random { 100 }}

    property("repeat"){|xs| xs == [100]*xs.length }
      .check{ Array.random { 100 }}
  end

end

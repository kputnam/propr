require "spec_helper"

describe Array, "generating" do

  context "min and max" do
    property("bounded"){|a,b| Array.propr(min: a, max: b) { "elem" }.length >= a }
      .check{|s| [Integer.propr(min: -10, max: 10), Integer.propr(min: 0, max: 20)] }

    property("bounded"){|a,b| Array.propr(min: a, max: b) { "elem" }.length <= b }
      .check{|s| [Integer.propr(min: -10, max: 10), Integer.propr(min: 0, max: 20)] }

    property("empty"){|xs| xs.empty? }
      .check(Array.propr(min: 0, max: 0) { nil })

    property("singleton"){|xs| xs == [nil] }
      .check(Array.propr(min: 1, max: 1) { nil })
  end

  context "items" do
    property("unique"){|xs| xs.uniq.length == xs.length }
      .check{|s| x = 0; Array.propr { x += 1 }}

    property("unique"){|xs| xs.empty? or xs.first == 0 }
      .check{|s| x = 0; Array.propr { x += 1 }}

    property("unique"){|xs| xs.empty? or xs.last == xs.length - 1 }
      .check{|s| x = 0; Array.propr { x += 1 }}

    property("repeat"){|xs| xs.uniq.length <= 1 }
      .check{|s| Array.propr { 100 }}
  end

end
